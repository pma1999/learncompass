"""Make users.id an identity column

Revision ID: manual_make_id_identity
Revises: manual_add_created_at_default # Adjust to the LATEST migration ID 
Create Date: 2024-08-10 13:00:00.000000 # Approximate date

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Sequence, CreateSequence # Needed for potential downgrade

# revision identifiers, used by Alembic.
revision: str = 'manual_make_id_identity'
# IMPORTANT: Update this to the revision ID of the previous migration
down_revision: Union[str, None] = 'manual_add_created_at_default' 
brach_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Option 1: Make it an IDENTITY column (Preferred for modern PostgreSQL)
    # This automatically creates and manages the underlying sequence.
    # We use a raw execute because Alembic's alter_column doesn't directly support ADD IDENTITY
    op.execute('ALTER TABLE users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY')
    
    # Option 2 (Alternative - if IDENTITY doesn't work or for older PG):
    # Create sequence explicitly and set as default
    # op.execute(CreateSequence(Sequence('users_id_seq')))
    # op.alter_column('users', 'id',
    #                   existing_type=sa.INTEGER(),
    #                   server_default=sa.text("nextval('users_id_seq'::regclass)"),
    #                   nullable=False)


def downgrade() -> None:
    # Remove the IDENTITY property
    # NOTE: This might require dropping and recreating the column or sequence
    # depending on exact PG version and how IDENTITY was added.
    # A simple DROP IDENTITY might suffice on newer versions.
    # For maximum safety, we might just remove the default if we used Option 2.
    
    # Downgrade for Option 1 (Attempt to drop identity)
    # WARNING: Check PostgreSQL version compatibility for DROP IDENTITY
    try:
        op.execute('ALTER TABLE users ALTER COLUMN id DROP IDENTITY IF EXISTS')
        # If the above fails, a more complex downgrade might be needed
    except Exception as e:
        print(f"Could not automatically drop IDENTITY: {e}")
        print("Manual downgrade intervention might be required.")

    # Downgrade for Option 2 (Remove default and drop sequence)
    # op.alter_column('users', 'id', server_default=None)
    # op.execute('DROP SEQUENCE IF EXISTS users_id_seq') 